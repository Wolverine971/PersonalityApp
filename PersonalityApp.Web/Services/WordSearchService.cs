using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;

using System.Data;
using System.Data.SqlClient;
using System.Security.Claims;
using System.Text;
using System.Threading.Tasks;
using WordsAPI.Api;
using WordsAPI.Model;
using PersonalityApp.Web.Domain;

using RapidAPISDK;
using System.Web.Configuration;


namespace PersonalityApp.Web.Services
{
    public class WordSearchService : IWordSearchService
    {
        public DetailsResponse GetWordDefinitions(WordRequest model)
        {

            var key = WebConfigurationManager.AppSettings["X-Mashape-Key"].ToString();
            // setup authentication
            string accessToken = key;
            string word = model.Word;
            string detail = "definitions";

            WordsApi wordsApi = new WordsApi();
            DetailsResponse response = wordsApi.Details(accessToken, word, detail);
            return response;
            
        }
        public DetailsResponse GetWordSynonyms(WordRequest model)
        {
            //var rapidsApiKey = WebConfigurationManager.AppSettings["RapidsApi"].ToString();
            //var rapidsAppKey = WebConfigurationManager.AppSettings["RapidsApp"].ToString();

            //RapidAPI RapidApi = new RapidAPI(rapidsAppKey, rapidsApiKey);

            //            Task<HttpResponse<RapidAPI>> response = Unirest.get("https://wordsapiv1.p.mashape.com/words/architect/also")
            //.header("X-Mashape-Key", "uRBh619v8PmshvlFy1zspEvLwf3Np1EIxUYjsnbS8ZF1W1aCpK")
            //.header("X-Mashape-Host", "wordsapiv1.p.mashape.com")
            //.asJson();



            // generated by http://restunited.com
            // for any feedback/issue with the code, please send to support{at}restunited.com
            var key = WebConfigurationManager.AppSettings["X-Mashape-Key"].ToString();
            var host = WebConfigurationManager.AppSettings["X-Mashape-Host"].ToString();
            // setup authentication
            string accessToken = key;
            string word = model.Word;
            string detail = "synonyms";

            WordsApi wordsApi = new WordsApi();
            DetailsResponse response = wordsApi.Details(accessToken, word, detail);
            return response;
            
        }

    }
}
